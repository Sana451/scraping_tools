import os
import requests
import logging
import time

logger = logging.getLogger(__name__)
logging.basicConfig(level=logging.INFO)

TELEGRAM_DOMAIN = os.getenv("TELEGRAM_DOMAIN", "https://api.telegram.org")
BOT_TOKEN = "7680351688:AAGC7eRCpQNkRkoCVy-4yjQeuG1BDwkSjoE"
CHAT_ID = "1748157760"

# –û–±—â–∏–π —Ç–∞–π–º–∞—É—Ç –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
REQUEST_TIMEOUT = 5  # —Å–µ–∫—É–Ω–¥


def send_file_result(file_name, bot_token=BOT_TOKEN, chat_id=CHAT_ID, caption="–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞"):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª –≤ Telegram —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏ –∑–∞—â–∏—Ç–æ–π –æ—Ç –∑–∞–≤–∏—Å–∞–Ω–∏–π."""
    start_time = time.time()
    logger.info(f"–ù–∞—á–∏–Ω–∞—é –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–∞–π–ª–∞: {file_name} -> Telegram —á–∞—Ç {chat_id}")

    if not os.path.exists(file_name):
        logger.error(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_name}")
        return

    try:
        with open(file_name, 'rb') as file:
            response = requests.post(
                url=f"{TELEGRAM_DOMAIN}/bot{bot_token}/sendDocument",
                data={
                    "chat_id": chat_id,
                    "caption": caption,
                },
                files={"document": file},
                timeout=REQUEST_TIMEOUT
            )

        duration = time.time() - start_time
        if response.status_code == 200:
            logger.info(f"–§–∞–π–ª {file_name} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–∞ {duration:.2f} —Å–µ–∫.")
            print(f"‚úÖ –§–∞–π–ª {file_name} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
        else:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞ {file_name}: HTTP {response.status_code}, –æ—Ç–≤–µ—Ç: {response.text}")

        return response.json()

    except requests.exceptions.Timeout:
        logger.error(f"‚è± –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞ {file_name} (—Ç–∞–π–º–∞—É—Ç {REQUEST_TIMEOUT}s)")
    except requests.exceptions.RequestException as error:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞ {file_name}: {error}")
    except Exception as e:
        logger.exception(f"‚ùóÔ∏è–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞ {file_name}: {e}")


def send_telegram_log(message="Not message to send but I wanted it too much.", bot_token=BOT_TOKEN, chat_id=CHAT_ID):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram —Å —Ç–∞–π–º–∞—É—Ç–æ–º –∏ –ª–æ–≥–∞–º–∏."""
    start_time = time.time()
    logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ Telegram-—Å–æ–æ–±—â–µ–Ω–∏—è: {message[:50]}...")

    try:
        response = requests.post(
            url=f"{TELEGRAM_DOMAIN}/bot{bot_token}/sendMessage",
            data={
                "chat_id": chat_id,
                "text": message
            },
            timeout=REQUEST_TIMEOUT
        )

        duration = time.time() - start_time
        if response.status_code == 200:
            logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∑–∞ {duration:.2f} —Å–µ–∫.")
            print(f"üì® –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {message[:50]}...")
        else:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: HTTP {response.status_code}, –æ—Ç–≤–µ—Ç: {response.text}")

        return response.json()

    except requests.exceptions.Timeout:
        logger.error(f"‚è± –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è (—Ç–∞–π–º–∞—É—Ç {REQUEST_TIMEOUT}s)")
    except requests.exceptions.RequestException as error:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {error}")
    except Exception as e:
        logger.exception(f"‚ùóÔ∏è–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")


if __name__ == '__main__':
    send_file_result(file_name=__file__)
    send_telegram_log("–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ main")
